<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.NeedGatherDao">
    <resultMap id="BaseResultMap" type="com.bean.NeedGather">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="sale_id" jdbcType="INTEGER" property="saleId"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="owner_usr" jdbcType="INTEGER" property="ownerUsr"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="updater" jdbcType="VARCHAR" property="updater"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime"/>
        <result column="c_id" jdbcType="INTEGER" property="cusId"/>
        <result column="c_name" jdbcType="VARCHAR" property="cusName"/>
        <result column="c_type" jdbcType="VARCHAR" property="cusType"/>
        <result column="build_date" jdbcType="TIMESTAMP" property="buildDate"/>
        <result column="sale_code" jdbcType="VARCHAR" property="saleCode"/>
        <result column="total" jdbcType="DOUBLE" property="total"/>
        <result column="payed" jdbcType="DOUBLE" property="payed"/>
        <result column="balance" jdbcType="DOUBLE" property="balance"/>
        <result column="over_flag" jdbcType="CHAR" property="overFlag"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <!--</resultMap>
        <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.NeedGatherWithBLOBs">-->
        <result column="shareId" jdbcType="LONGVARCHAR" property="shareid"/>
        <result column="read_shareId" jdbcType="LONGVARCHAR" property="readShareid"/>
        <result column="remark" jdbcType="LONGVARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, sale_id, pid, owner_usr, creator, createTime, updater, updateTime, c_id, c_name,
        c_type, build_date, sale_code, total, payed, balance, over_flag, status
        <!--</sql>
        <sql id="Blob_Column_List">-->
        ,
        shareId, read_shareId, remark
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        <!--,
        <include refid="Blob_Column_List"/>-->
        from b_need_gather
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(ng.id)
        FROM b_need_gather ng, c_company c, s_user u WHERE ng.c_id = c.id AND ng.owner_usr = u.id
        <if test="bean.saleCode != null and bean.saleCode != ''">
            AND ng.sale_code LIKE CONCAT('%', #{bean.saleCode}, '%')
        </if>
        <if test="bean.cusName != null and bean.cusName != ''">
            AND ng.c_name LIKE CONCAT('%', #{bean.cusName}, '%')
        </if>
        <if test="bean.createtimeStr != null and bean.createtimeStr != ''">
            AND ng.createTime = #{bean.createtimeStr}
        </if>
        <if test="bean.ownerUsrName != null and bean.ownerUsrName != ''">
            AND u.name LIKE CONCAT('%', #{bean.ownerUsrName}, '%')
        </if>
        <if test="bean.province != null and bean.province != ''">
            AND c.province province = #{bean.province}
        </if>
        <if test="bean.city != null and bean.city != ''">
            AND ng.city city = #{bean.city}
        </if>
        <if test="bean.regionName != null and bean.regionName != ''">
            AND ng.region_name regionName = #{bean.regionName}
        </if>
    </select>

    <select id="listByPage" resultType="com.bean.NeedGather">
        SELECT ng.id,ng.sale_code, ng.c_name, ng.createTime, ng.total, ng.payed, ng.balance, ng.over_flag, u.name
        ownerUsrName
        FROM b_need_gather ng, c_company c, s_user u WHERE ng.c_id = c.id AND ng.owner_usr = u.id
        <if test="bean.saleCode != null and bean.saleCode != ''">
            AND ng.sale_code LIKE CONCAT('%', #{bean.saleCode}, '%')
        </if>
        <if test="bean.cusName != null and bean.cusName != ''">
            AND ng.c_name LIKE CONCAT('%', #{bean.cusName}, '%')
        </if>
        <if test="bean.createtimeStr != null and bean.createtimeStr != ''">
            AND ng.createTime = #{bean.createtimeStr}
        </if>
        <if test="bean.ownerUsrName != null and bean.ownerUsrName != ''">
            AND u.name LIKE CONCAT('%', #{bean.ownerUsrName}, '%')
        </if>
        <if test="bean.province != null and bean.province != ''">
            AND c.province province = #{bean.province}
        </if>
        <if test="bean.city != null and bean.city != ''">
            AND ng.city city = #{bean.city}
        </if>
        <if test="bean.regionName != null and bean.regionName != ''">
            AND ng.region_name regionName = #{bean.regionName}
        </if>
        LIMIT #{from}, #{pageSize}
    </select>

    <select id="listAll" resultType="com.bean.NeedGather">
        SELECT
            ng.id,
            ng.sale_code,
            ng.c_name,
            ng.createTime,
            ng.total,
            ng.payed,
            ng.balance,
            ng.over_flag,
            u.name ownerUsrName
        FROM b_need_gather ng, c_company c, s_user u
        WHERE ng.c_id = c.id AND ng.owner_usr = u.id
    </select>

    <select id="listSelected" resultType="com.bean.NeedGather">
        SELECT ng.id,ng.sale_code, ng.c_name, ng.createTime, ng.total, ng.payed, ng.balance, ng.over_flag, u.name
        ownerUsrName
        FROM b_need_gather ng, c_company c, s_user u WHERE ng.c_id = c.id AND ng.owner_usr = u.id AND ng.id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id, jdbcType=INTEGER}
        </foreach>
    </select>

    <delete id="removeByPrimaryKeys">
        DELETE FROM b_need_gather WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id, jdbcType=INTEGER}
        </foreach>
    </delete>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM b_need_gather
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.bean.NeedGather">
        INSERT INTO b_need_gather (id, sale_id, pid,
                                   owner_usr, creator, createTime,
                                   updater, updateTime, c_id,
                                   c_name, c_type, build_date,
                                   sale_code, total, payed,
                                   balance, over_flag, status,
                                   shareId, read_shareId, remark
        )
        VALUES (#{id,jdbcType=INTEGER}, #{saleId,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER},
                                        #{ownerUsr,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR},
                                        #{createtime,jdbcType=TIMESTAMP},
                                        #{updater,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP},
                                        #{cusId,jdbcType=INTEGER},
                                        #{cusName,jdbcType=VARCHAR}, #{cusType,jdbcType=VARCHAR},
            #{buildDate,jdbcType=TIMESTAMP},
            #{saleCode,jdbcType=VARCHAR}, #{total,jdbcType=DOUBLE}, #{payed,jdbcType=DOUBLE},
            #{balance,jdbcType=DOUBLE}, #{overFlag,jdbcType=CHAR}, #{status,jdbcType=VARCHAR},
            #{shareid,jdbcType=LONGVARCHAR}, #{readShareid,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.bean.NeedGather">
        insert into b_need_gather
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="saleId != null">
                sale_id,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="ownerUsr != null">
                owner_usr,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="updater != null">
                updater,
            </if>
            <if test="updatetime != null">
                updateTime,
            </if>
            <if test="cusId != null">
                c_id,
            </if>
            <if test="cusName != null">
                c_name,
            </if>
            <if test="cType != null">
                c_type,
            </if>
            <if test="buildDate != null">
                build_date,
            </if>
            <if test="saleCode != null">
                sale_code,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="payed != null">
                payed,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="overFlag != null">
                over_flag,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="shareid != null">
                shareId,
            </if>
            <if test="readShareid != null">
                read_shareId,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="saleId != null">
                #{saleId,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="ownerUsr != null">
                #{ownerUsr,jdbcType=INTEGER},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updater != null">
                #{updater,jdbcType=VARCHAR},
            </if>
            <if test="updatetime != null">
                #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="cusId != null">
                #{cusId,jdbcType=INTEGER},
            </if>
            <if test="cusName != null">
                #{cusName,jdbcType=VARCHAR},
            </if>
            <if test="cType != null">
                #{cusType,jdbcType=VARCHAR},
            </if>
            <if test="buildDate != null">
                #{buildDate,jdbcType=TIMESTAMP},
            </if>
            <if test="saleCode != null">
                #{saleCode,jdbcType=VARCHAR},
            </if>
            <if test="total != null">
                #{total,jdbcType=DOUBLE},
            </if>
            <if test="payed != null">
                #{payed,jdbcType=DOUBLE},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=DOUBLE},
            </if>
            <if test="overFlag != null">
                #{overFlag,jdbcType=CHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="shareid != null">
                #{shareid,jdbcType=LONGVARCHAR},
            </if>
            <if test="readShareid != null">
                #{readShareid,jdbcType=LONGVARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bean.NeedGather">
        update b_need_gather
        <set>
            <if test="saleId != null">
                sale_id = #{saleId,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="ownerUsr != null">
                owner_usr = #{ownerUsr,jdbcType=INTEGER},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updater != null">
                updater = #{updater,jdbcType=VARCHAR},
            </if>
            <if test="updatetime != null">
                updateTime = #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="cusId != null">
                c_id = #{cusId,jdbcType=INTEGER},
            </if>
            <if test="cusName != null">
                c_name = #{cusName,jdbcType=VARCHAR},
            </if>
            <if test="cType != null">
                c_type = #{cusType,jdbcType=VARCHAR},
            </if>
            <if test="buildDate != null">
                build_date = #{buildDate,jdbcType=TIMESTAMP},
            </if>
            <if test="saleCode != null">
                sale_code = #{saleCode,jdbcType=VARCHAR},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=DOUBLE},
            </if>
            <if test="payed != null">
                payed = #{payed,jdbcType=DOUBLE},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=DOUBLE},
            </if>
            <if test="overFlag != null">
                over_flag = #{overFlag,jdbcType=CHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="shareid != null">
                shareId = #{shareid,jdbcType=LONGVARCHAR},
            </if>
            <if test="readShareid != null">
                read_shareId = #{readShareid,jdbcType=LONGVARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.NeedGather">
        UPDATE b_need_gather
        SET sale_id      = #{saleId,jdbcType=INTEGER},
            pid          = #{pid,jdbcType=INTEGER},
            owner_usr    = #{ownerUsr,jdbcType=INTEGER},
            creator      = #{creator,jdbcType=VARCHAR},
            createTime   = #{createtime,jdbcType=TIMESTAMP},
            updater      = #{updater,jdbcType=VARCHAR},
            updateTime   = #{updatetime,jdbcType=TIMESTAMP},
            c_id         = #{cusId,jdbcType=INTEGER},
            c_name       = #{cusName,jdbcType=VARCHAR},
            c_type       = #{cusType,jdbcType=VARCHAR},
            build_date   = #{buildDate,jdbcType=TIMESTAMP},
            sale_code    = #{saleCode,jdbcType=VARCHAR},
            total        = #{total,jdbcType=DOUBLE},
            payed        = #{payed,jdbcType=DOUBLE},
            balance      = #{balance,jdbcType=DOUBLE},
            over_flag    = #{overFlag,jdbcType=CHAR},
            status       = #{status,jdbcType=VARCHAR},
            shareId      = #{shareid,jdbcType=LONGVARCHAR},
            read_shareId = #{readShareid,jdbcType=LONGVARCHAR},
            remark       = #{remark,jdbcType=LONGVARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bean.NeedGather">
        UPDATE b_need_gather
        SET sale_id    = #{saleId,jdbcType=INTEGER},
            pid        = #{pid,jdbcType=INTEGER},
            owner_usr  = #{ownerUsr,jdbcType=INTEGER},
            creator    = #{creator,jdbcType=VARCHAR},
            createTime = #{createtime,jdbcType=TIMESTAMP},
            updater    = #{updater,jdbcType=VARCHAR},
            updateTime = #{updatetime,jdbcType=TIMESTAMP},
            c_id       = #{cusId,jdbcType=INTEGER},
            c_name     = #{cusName,jdbcType=VARCHAR},
            c_type     = #{cusType,jdbcType=VARCHAR},
            build_date = #{buildDate,jdbcType=TIMESTAMP},
            sale_code  = #{saleCode,jdbcType=VARCHAR},
            total      = #{total,jdbcType=DOUBLE},
            payed      = #{payed,jdbcType=DOUBLE},
            balance    = #{balance,jdbcType=DOUBLE},
            over_flag  = #{overFlag,jdbcType=CHAR},
            status     = #{status,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
</mapper>