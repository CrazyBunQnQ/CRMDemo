<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.AccessGroupDao">
    <resultMap id="BaseResultMap" type="com.bean.AccessGroup">
        <id column="Id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <!--</resultMap>
        <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.AccessGroupWithBLOBs">-->
        <result column="dpte" jdbcType="LONGVARCHAR" property="dpte"/>
        <result column="remark" jdbcType="LONGVARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        Id, name,
        dpte, remark
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_access_group
        where Id = #{id,jdbcType=INTEGER}
    </select>

    <select id="listByPage" resultType="com.bean.AccessGroup">
        select id,name,remark,dpte from s_access_group where 1=1
        <if test="bean != null">
            <if test="bean.name!=null and bean.name.trim()!=''">
                and name like concat('%',#{bean.name},'%')
            </if>
        </if>
        limit #{from},#{pageSize}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(id) from s_access_group where 1=1
        <if test="bean != null">
            <if test="bean.name!=null and bean.name.trim()!=''">
                and name like concat('%',#{bean.name},'%')
            </if>
        </if>
    </select>

    <select id="listAll" resultType="com.bean.AccessGroup">
        select id,name,remark,dpte from s_access_group where 1=1
    </select>

    <select id="listSelected" resultType="com.bean.AccessGroup">
        select id,name,remark,dpte from s_access_group where id in
        <foreach collection="ids"  item="id" open="("  close=")" separator=",">
            #{id, jdbcType=INTEGER}
        </foreach>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM s_access_group
        WHERE Id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.bean.AccessGroup">
        INSERT INTO s_access_group (Id, name, dpte,
                                    remark)
        VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{dpte,jdbcType=LONGVARCHAR},
                #{remark,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.bean.AccessGroup">
        insert into s_access_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                Id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="dpte != null">
                dpte,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="dpte != null">
                #{dpte,jdbcType=LONGVARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bean.AccessGroup">
        update s_access_group
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="dpte != null">
                dpte = #{dpte,jdbcType=LONGVARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where Id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.AccessGroup">
        UPDATE s_access_group
        SET name   = #{name,jdbcType=VARCHAR},
            dpte   = #{dpte,jdbcType=LONGVARCHAR},
            remark = #{remark,jdbcType=LONGVARCHAR}
        WHERE Id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bean.AccessGroup">
        UPDATE s_access_group
        SET name = #{name,jdbcType=VARCHAR}
        WHERE Id = #{id,jdbcType=INTEGER}
    </update>
</mapper>