<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.RoleDao">

    <resultMap id="BaseResultMap" type="com.bean.Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="remark" jdbcType="LONGVARCHAR" property="remark"/>
        <result column="popedom" jdbcType="LONGVARCHAR" property="popedom"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name,
        remark, popedom
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_role
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="listByPage" resultType="com.bean.Role">
        SELECT id, name
        FROM s_role
        <if test="bean.name != null and bean.name !=''">
            WHERE name LIKE CONCAT('%', ${bean.name}, '%')
        </if>
        LIMIT #{from}, #{pageSize}
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(id)
        FROM s_role
        <if test="bean.name != null and bean.name !=''">
            WHERE name LIKE CONCAT('%', ${bean.name}, '%')
        </if>
    </select>

    <select id="listAll" resultType="com.bean.Role">
        SELECT
            id,
            name
        FROM s_role
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM s_role
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="removeByPrimaryKeys">
        DELETE FROM s_role
        WHERE id IN
        <foreach collection="ids" item="item" separator="," open="(" close=")">
            #{item, jdbcType=INTEGER}
        </foreach>
    </delete>

    <insert id="insert" parameterType="com.bean.Role">
        INSERT INTO s_role (id, name, remark, popedom)
        VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR},
                #{popedom,jdbcType=LONGVARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.bean.Role">
        insert into s_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="popedom != null">
                popedom,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
            <if test="popedom != null">
                #{popedom,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.bean.Role">
        update s_role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
            <if test="popedom != null">
                popedom = #{popedom,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.Role">
        UPDATE s_role
        SET name    = #{name,jdbcType=VARCHAR},
            remark  = #{remark,jdbcType=LONGVARCHAR},
            popedom = #{popedom,jdbcType=LONGVARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.bean.Role">
        UPDATE s_role
        SET name = #{name,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
</mapper>