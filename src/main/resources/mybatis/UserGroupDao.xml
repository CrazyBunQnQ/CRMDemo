<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserGroupDao">
    <resultMap id="BaseResultMap" type="com.bean.UserGroup">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="principal" jdbcType="VARCHAR" property="principal"/>
        <result column="incumbent" jdbcType="VARCHAR" property="incumbent"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="fcode" jdbcType="VARCHAR" property="fcode"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bean.UserGroup">
        <result column="remark" jdbcType="LONGVARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, principal, incumbent, pid, fcode
    </sql>
    <sql id="Blob_Column_List">
        remark
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from s_user_group
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM s_user_group WHERE 1 = 1
        <if test="bean.name != null and bean.name != ''">
            AND name LIKE CONCAT('%', #{bean.name}, '%')
        </if>
    </select>

    <select id="listByPage" resultType="com.bean.UserGroup">
        SELECT id,name,principal,incumbent FROM s_user_group WHERE 1=1
        <if test="bean.name != null and bean.name != ''">
            AND name LIKE CONCAT('%', #{bean.name}, '%')
        </if>
        LIMIT #{from}, #{pageSize}
    </select>

    <select id="listAll" resultType="com.bean.UserGroup">
        SELECT
            id,
            name,
            principal,
            incumbent
        FROM s_user_group
        WHERE 1 = 1
    </select>

    <select id="listSelected" resultType="com.bean.UserGroup">
        SELECT id,name,principal,incumbent FROM s_user_group WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id, jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="findRootProductType" resultType="com.bean.UserGroup">
        SELECT
            id,
            name
        FROM s_user_group
        WHERE pid = 0
    </select>

    <select id="findSubProductType" resultType="com.bean.UserGroup">
        SELECT
            id,
            name
        FROM s_user_group
        WHERE pid = #{pid}
    </select>

    <delete id="removeByPrimaryKeys">
        DELETE FROM s_user_group WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id, jdbcType=INTEGER}
        </foreach>
    </delete>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM s_user_group
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.bean.UserGroup">
        INSERT INTO s_user_group (id, name, principal,
                                  incumbent, pid, fcode,
                                  remark)
        VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR},
                #{incumbent,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, #{fcode,jdbcType=VARCHAR},
                #{remark,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.bean.UserGroup">
        insert into s_user_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="principal != null">
                principal,
            </if>
            <if test="incumbent != null">
                incumbent,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="fcode != null">
                fcode,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="principal != null">
                #{principal,jdbcType=VARCHAR},
            </if>
            <if test="incumbent != null">
                #{incumbent,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="fcode != null">
                #{fcode,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bean.UserGroup">
        update s_user_group
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="principal != null">
                principal = #{principal,jdbcType=VARCHAR},
            </if>
            <if test="incumbent != null">
                incumbent = #{incumbent,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="fcode != null">
                fcode = #{fcode,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bean.UserGroup">
        UPDATE s_user_group
        SET name      = #{name,jdbcType=VARCHAR},
            principal = #{principal,jdbcType=VARCHAR},
            incumbent = #{incumbent,jdbcType=VARCHAR},
            pid       = #{pid,jdbcType=INTEGER},
            fcode     = #{fcode,jdbcType=VARCHAR},
            remark    = #{remark,jdbcType=LONGVARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bean.UserGroup">
        UPDATE s_user_group
        SET name      = #{name,jdbcType=VARCHAR},
            principal = #{principal,jdbcType=VARCHAR},
            incumbent = #{incumbent,jdbcType=VARCHAR},
            pid       = #{pid,jdbcType=INTEGER},
            fcode     = #{fcode,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
</mapper>